// display Flex
@mixin flex($direction: false, $align:false , $justify:false) {
    display: flex;

    @if ($direction) {
        flex-direction: $direction;
    }

    @if ($align) {
        align-items: $align;
    }

    @if ($justify) {
        justify-content: $justify;
    }
}


// responsiveness
$breakpoints: (
    "xs": 480px, // extra small devices
    "sm": 576px, // small devices
    "md": 768px, // medium devices
    "lg": 992px, // large devices
    "xl": 1200px // extra large devices
);

@mixin responsive($breakpoint, $limit: max) {

    @if ($limit == max) {

        @if (map-has-key($map: $breakpoints, $key: $breakpoint)) {
            @media only screen and (max-width: map-get($breakpoints, $breakpoint)) {
                @content;
            }
    
        } @else {
            @media only screen and (max-width: $breakpoint) {
                @content;
            }

        }

    } @else if ($limit == min) {

        @if (map-has-key($map: $breakpoints, $key: $breakpoint)) {
            @media only screen and (min-width: map-get($breakpoints, $breakpoint)) {
                @content;
            }
    
        } @else {
            @media only screen and (min-width: $breakpoint) {
                @content;
            }

        }

    } @else {
        @error "Unknown viewport limit: #{$limit}. Must be min or max.";
    }
}


// absolute positioning
@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}


// img positioning
@mixin positioning($fit, $position: false) {
    width: 100%;
    height: 100%;
    object-fit: $fit;

    @if ($position) {
        object-position: $position;
    }
}
